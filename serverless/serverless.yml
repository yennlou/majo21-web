service: blog-backend

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  region: ap-southeast-2
  stage: dev
  memorySize: 128
  timeout: 5
  environment:
    BLOG_TABLE: ${self:service}-${self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.BLOG_TABLE}"

functions:
  get-posts:
    handler: api/getPosts.handler
    description: Get posts by type
    events:
      - http:
          path: posts/t/blog
          method: post
          cors: true
    
resources:
  Resources:
    BlogTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.BLOG_TABLE}
        AttributeDefinitions:
          - AttributeName: post_id
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: N
          - AttributeName: post_type
            AttributeType: S
        KeySchema:
          - AttributeName: post_id
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: post_type-index
            KeySchema:
              - AttributeName: post_type
                KeyType: HASH
              - AttributeName: timestamp
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 10
              WriteCapacityUnits: 2
              